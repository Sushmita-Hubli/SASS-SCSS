//Loops 
//Using loops in map
@each $key, $value in $colors{

    /*This syntax creates class names by appending the key to the prefix text-. For example, if $key is primary, it generates the class .text-primary.*/
    .text-#{$key}
    {
        color:$value;
    }
    .bg-#{$key}
    {
        background-color: $value;

    }
.text-hover-#{$key}
{
    &:hover
    {
        color: $value; 

    }


}


    //so the below code will be executed only if the value of key is not equal to black or white
    @if($value != black and $value!= white)
    {
    //light variations
    @for $i from 1 through 9{
        .text-#{$key}-light-#{$i}
        {
            color:mix(white, $value, $i*10);
        }

        .text-hover-#{$key}-light-#{$i}
{
    &:hover
    {
        color:mix(white, $value, $i*10);
     

    }


}


        .bg-#{$key}-light-#{$i}
        {
            background-color:mix(white, $value, $i*10);
        }
    }

    //dark variations
    @for $i from 1 through 9{
        .text-#{$key}-dark-#{$i}
        {
            color:mix(black, $value, $i*10);
        }



        .text-hover-#{$key}-dark-#{$i}
{
    &:hover
    {
        color:mix(black, $value, $i*10);
          

    }


}

        .bg-#{$key}-dark-#{$i}
        {
            background-color:mix(black, $value, $i*10);
        }
    }


    }

}


//conditionals(@if)
 /*so since this condition is true, the css for this code will be generated in lect5.css file*/
@if(10>5) 
{
    .then-if
    {
        background-color: black;
    }
}

/*so since this condition is false, the css for this code will not be generated in lect5.css file*/
@if(10<5) 
{
    .then-if
    {
        background-color: black;
    }
}
//this part will be reflected in lect5.css file 
@else 
{
    .then-if-2{
        background-color: white;
    }
}


